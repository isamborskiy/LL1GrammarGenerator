grammar JavaGrammar $

prog
	# classDeclaration EOF
	$
	
classDeclaration
	# modifier CLASS NAME LEFT bodyDeclaration RIGHT
	$
	
bodyDeclaration
	# declaration classElement bodyDeclaration
	# EPS
	$
	
declaration
	# modifier type NAME
	# type NAME
	$
	
classElement
	# EQUAL expression SEMICOLON
	# LEFTROUND arguments RIGHTROUND LEFT functionBody RIGHT
	# SEMICOLON
	$
	
functionBody
	# functionElement functionBody
	# EPS
	$
	
functionElement
	# expression SEMICOLON
	$

arguments
	# argumentWithoutComma argumentss
	# EPS
	$
	
argumentss
	# argumentWithComma argumentss
	# EPS
	$
	
argumentWithoutComma
	# type NAME
	$

argumentWithComma
	# COMMA type NAME
	$

modifier
	# PUBLIC
	# PRIVATE
	$
	
type
	# INT
	# LONG
	# BOOLEAN
	# NAME
	$

expression
	# NUMBER
	# TRUE
	# FALSE
	# NEW NAME LEFTROUND expression RIGHTROUND
	$
	
PUBLIC		: (public) $
PRIVATE		: (private) $
CLASS		: (class) $
NEW			: (new) $
LEFT		: ({) $
RIGHT		: (}) $
LEFTROUND	: (() $
RIGHTROUND	: ()) $
SEMICOLON	: (;) $
COMMA		: (,) $
EQUAL		: (=) $
INT			: (int) $
LONG		: (long) $
FLOAT		: (float) $
DOUBLE		: (double) $
BOOLEAN		: (boolean) $
TRUE		: (true) $
FALSE		: (false) $
NAME		: ('[a-zA-Z]+') $
NUMBER		: ('\-?\d') $

SKIP		: ( \t\r\n) -> skip $